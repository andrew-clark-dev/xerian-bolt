import * as React from "react";
import { GridProps, SelectFieldProps, TextFieldProps } from "@aws-amplify/ui-react";
import { Item } from "./graphql/types";
export declare type EscapeHatchProps = {
    [elementHierarchy: string]: Record<string, unknown>;
} | null;
export declare type VariantValues = {
    [key: string]: string;
};
export declare type Variant = {
    variantValues: VariantValues;
    overrides: EscapeHatchProps;
};
export declare type ValidationResponse = {
    hasError: boolean;
    errorMessage?: string;
};
export declare type ValidationFunction<T> = (value: T, validationResponse: ValidationResponse) => ValidationResponse | Promise<ValidationResponse>;
export declare type ItemUpdateFormInputValues = {
    id?: string;
    sku?: string;
    lastActivityBy?: string;
    title?: string;
    category?: string;
    brand?: string;
    color?: string;
    size?: string;
    description?: string;
    details?: string;
    images?: string[];
    condition?: string;
    quantity?: number;
    split?: number;
    price?: number;
    status?: string;
    printedAt?: string;
    lastSoldAt?: string;
    lastViewedAt?: string;
    createdAt?: string;
    updatedAt?: string;
    deletedAt?: string;
};
export declare type ItemUpdateFormValidationValues = {
    id?: ValidationFunction<string>;
    sku?: ValidationFunction<string>;
    lastActivityBy?: ValidationFunction<string>;
    title?: ValidationFunction<string>;
    category?: ValidationFunction<string>;
    brand?: ValidationFunction<string>;
    color?: ValidationFunction<string>;
    size?: ValidationFunction<string>;
    description?: ValidationFunction<string>;
    details?: ValidationFunction<string>;
    images?: ValidationFunction<string>;
    condition?: ValidationFunction<string>;
    quantity?: ValidationFunction<number>;
    split?: ValidationFunction<number>;
    price?: ValidationFunction<number>;
    status?: ValidationFunction<string>;
    printedAt?: ValidationFunction<string>;
    lastSoldAt?: ValidationFunction<string>;
    lastViewedAt?: ValidationFunction<string>;
    createdAt?: ValidationFunction<string>;
    updatedAt?: ValidationFunction<string>;
    deletedAt?: ValidationFunction<string>;
};
export declare type PrimitiveOverrideProps<T> = Partial<T> & React.DOMAttributes<HTMLDivElement>;
export declare type ItemUpdateFormOverridesProps = {
    ItemUpdateFormGrid?: PrimitiveOverrideProps<GridProps>;
    id?: PrimitiveOverrideProps<TextFieldProps>;
    sku?: PrimitiveOverrideProps<TextFieldProps>;
    lastActivityBy?: PrimitiveOverrideProps<TextFieldProps>;
    title?: PrimitiveOverrideProps<TextFieldProps>;
    category?: PrimitiveOverrideProps<TextFieldProps>;
    brand?: PrimitiveOverrideProps<TextFieldProps>;
    color?: PrimitiveOverrideProps<TextFieldProps>;
    size?: PrimitiveOverrideProps<TextFieldProps>;
    description?: PrimitiveOverrideProps<TextFieldProps>;
    details?: PrimitiveOverrideProps<TextFieldProps>;
    images?: PrimitiveOverrideProps<TextFieldProps>;
    condition?: PrimitiveOverrideProps<SelectFieldProps>;
    quantity?: PrimitiveOverrideProps<TextFieldProps>;
    split?: PrimitiveOverrideProps<TextFieldProps>;
    price?: PrimitiveOverrideProps<TextFieldProps>;
    status?: PrimitiveOverrideProps<SelectFieldProps>;
    printedAt?: PrimitiveOverrideProps<TextFieldProps>;
    lastSoldAt?: PrimitiveOverrideProps<TextFieldProps>;
    lastViewedAt?: PrimitiveOverrideProps<TextFieldProps>;
    createdAt?: PrimitiveOverrideProps<TextFieldProps>;
    updatedAt?: PrimitiveOverrideProps<TextFieldProps>;
    deletedAt?: PrimitiveOverrideProps<TextFieldProps>;
} & EscapeHatchProps;
export declare type ItemUpdateFormProps = React.PropsWithChildren<{
    overrides?: ItemUpdateFormOverridesProps | undefined | null;
} & {
    sku?: string;
    item?: Item;
    onSubmit?: (fields: ItemUpdateFormInputValues) => ItemUpdateFormInputValues;
    onSuccess?: (fields: ItemUpdateFormInputValues) => void;
    onError?: (fields: ItemUpdateFormInputValues, errorMessage: string) => void;
    onChange?: (fields: ItemUpdateFormInputValues) => ItemUpdateFormInputValues;
    onValidate?: ItemUpdateFormValidationValues;
} & React.CSSProperties>;
export default function ItemUpdateForm(props: ItemUpdateFormProps): React.ReactElement;
